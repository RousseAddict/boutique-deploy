name: Server - Backup + Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.TOKEN }}

      - name: Copy files from server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PATH: ${{ secrets.SSH_PATH }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p ${SSH_PASSWORD} scp -o StrictHostKeyChecking=no -r ${SSH_USER}@${SSH_HOST}:~/boutique/vendure.sqlite vendure.sqlite
          sshpass -p ${SSH_PASSWORD} scp -o StrictHostKeyChecking=no -r ${SSH_USER}@${SSH_HOST}:~/boutique/vendure.sqlite-shm vendure.sqlite-shm
          sshpass -p ${SSH_PASSWORD} scp -o StrictHostKeyChecking=no -r ${SSH_USER}@${SSH_HOST}:~/boutique/vendure.sqlite-wal vendure.sqlite-wal

      - name: Delete branch if exists
        continue-on-error: true
        run: |
          git branch --delete backup

      - name: Commit & Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: 'backup'
          create_branch: true
          push_options: '--force'

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: backup
    steps:
      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.TOKEN }}

      - name: Copy files to server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PATH: ${{ secrets.SSH_PATH }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p ${SSH_PASSWORD} scp -o StrictHostKeyChecking=no -r * ${SSH_USER}@${SSH_HOST}:~/boutique
    
      - name: Deploy
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PATH: ${{ secrets.SSH_PATH }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        run: |
          sshpass -p ${SSH_PASSWORD} ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'echo $APP_ENV && pm2 delete all' || true
          sshpass -p ${SSH_PASSWORD} ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'cd boutique && npm ci && npm run build'
          sshpass -p ${SSH_PASSWORD} ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} 'cd boutique && pm2 start npm -- start --name "boutique"'
